{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/LoginForm.module.css","components/Login/Login.module.css","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","absoluteNote","Textarea","props","restProps","child","Input","createField","name","type","placeholder","validator","component","style","additionalComponent","validate","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","needCaptcha","captchaUrl","loginform","onSubmit","rememberMe","rememberMeText","src","alt","commonError","loginBtn","Login","isAuth","to","login","formData","email","password","captcha","LoginContainer","getCaptcha","console","log","this","React","Component","connect","state","auth"],"mappings":"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","file":"static/js/6.9886e226.chunk.js","sourcesContent":["import s from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + s.error}>\r\n            <div className={s.absoluteNote}>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (name, type, placeholder, validator, component, style, additionalComponent) => (\r\n    <div className={style}>\r\n        <Field\r\n            name={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            validate={validator}\r\n            component={component}\r\n        />\r\n        {additionalComponent}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2g2UO\",\"absoluteNote\":\"FormsControls_absoluteNote__J9h8j\",\"error\":\"FormsControls_error__3XU8k\"};","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Обязательное поле';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Максимальная длина - ${maxLength} символов`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginform\":\"LoginForm_loginform__2YAFX\",\"checkbox\":\"LoginForm_checkbox__2K4Tz\",\"rememberMe\":\"LoginForm_rememberMe__2egrg\",\"rememberMeText\":\"LoginForm_rememberMeText__1DiyI\",\"commonError\":\"LoginForm_commonError__3t1Hy\",\"loginBtn\":\"LoginForm_loginBtn__p82h3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3vuaP\"};","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport s from './LoginForm.module.css';\r\nimport { required } from '../../utils/validators/validators'\r\n\r\nconst LoginForm = ({ handleSubmit, error, needCaptcha, captchaUrl }) => {\r\n    return <form className={s.loginform} onSubmit={handleSubmit}>\r\n        {createField('email', 'email', 'Ваш E-mail', [required], Input)}\r\n        {createField('password', 'password', 'Пароль', [required], Input)}\r\n        {createField('rememberMe', 'checkbox', [], [], Input, s.rememberMe, <div className={s.rememberMeText}>Запомнить меня?</div>)}\r\n        {needCaptcha && <div>\r\n            <div>\r\n                <img src={captchaUrl} alt=\"CAPTCHA\" />\r\n            </div>\r\n            {createField('captcha', 'captcha', 'Введите код с картинки', [required], Input)}\r\n        </div>}\r\n        {error && <div className={s.commonError}>{error}</div>}\r\n        <div><button className={s.loginBtn}>Войти</button></div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from 'react';\r\nimport LoginReduxForm from './LoginForm';\r\nimport s from './Login.module.css';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className={s.login}>\r\n        <h1>ВХОД</h1>\r\n        <LoginReduxForm needCaptcha={props.needCaptcha} captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nexport default Login","import { connect } from \"react-redux\";\r\nimport { login, getCaptcha } from \"../../redux/authReducer\";\r\nimport Login from \"./Login\";\r\nimport React from 'react';\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    componentDidUpdate(needCaptcha) {\r\n        if (needCaptcha) {\r\n            getCaptcha();\r\n            console.log('Request captcha')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Login\r\n            login={this.props.login}\r\n            getCaptcha={this.props.getCaptcha}\r\n            isAuth={this.props.isAuth}\r\n            captchaUrl={this.props.captchaUrl}\r\n            needCaptcha={this.props.needCaptcha}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n        needCaptcha: state.auth.needCaptcha\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, getCaptcha })(LoginContainer)"],"sourceRoot":""}